
--- N_GROUP_TOPICS=2, N_REC_TOPICS=3
2016/11/17 21:49:25: Loading talk data
My recommender: deeper 0.314142, wider 0.464162, total 0.778304
Benchmark: deeper 0.305456, wider 0.464341, total 0.769797
outputform: score 0.0085, freq 0.546667, pvalue 0.053337


--- python src/clean_data.py
Transforming user data from merged talk data and idiap user data
python srdf_train=(101284, 5), rdf_test=(28273, 5)
Save transformed user data into rating matrix
rc/model_talk_topics.pySave transformed user data into rating matrix


--- python src/model_talk_topics.py
2016/11/17 21:56:57: Loading talk data

--- python src/model_user_groups.py; python src/recommend_talks.py
# topics = 10, # fav topics for groups = 2, # rec topics = 2
2016/11/17 22:05:32: Loading talk data
2016/11/17 22:05:32: Loading user data
2016/11/17 22:05:36: Getting users' top 2 topics as group topics
U_gtopics: #user = 10901, # gtopics = 2

2016/11/17 22:05:40: Getting groups' users based on gtopics
# grps=51, # total users=10901, (min, max) grp size=(1, 1020)

2016/11/17 22:05:40: Getting groups' 2 recommended topics
# grps=56, # rec topics=2

2016/11/17 22:05:40: Getting users' recommended topics

2016/11/17 22:05:44: Loading talk data
My recommender: deeper 0.283569, wider 0.299932, total 0.583501
Benchmark: deeper 0.254572, wider 0.274525, total 0.529096
outputform: score 0.0544, freq 0.620667, pvalue 0.000000

--- python src/model_user_groups.py; python src/recommend_talks.py
# topics = 10, # fav topics for groups = 2, # rec topics = 3
2016/11/17 22:08:05: Loading talk data
2016/11/17 22:08:05: Loading user data
2016/11/17 22:08:08: Getting users' top 2 topics as group topics
U_gtopics: #user = 10901, # gtopics = 2

2016/11/17 22:08:13: Getting groups' users based on gtopics
# grps=51, # total users=10901, (min, max) grp size=(1, 1020)

2016/11/17 22:08:13: Getting groups' 3 recommended topics
# grps=56, # rec topics=3

2016/11/17 22:08:13: Getting users' recommended topics
2016/11/17 22:08:17: Loading talk data
My recommender: deeper 0.283569, wider 0.420902, total 0.704471
Benchmark: deeper 0.254572, wider 0.400232, total 0.654804
outputform: score 0.0497, freq 0.655333, pvalue 0.000000

--- rec "Informative, Inspiring" + "internet technology data computer investment finance economics"
=====Bill Gross: The single biggest reason why startups succeed (TED2015)=====
[keywords]
business, creativity, technology
=====Dilip Ratha: The hidden force in global economics: sending money home (TEDGlobal 2014)=====
[keywords]
business, economics, finance
=====Joi Ito: Want to innovate? Become a "now-ist" (TED2014)=====
[keywords]
business, creativity, design, engineering, entrepreneur, innovation, investment, natural disaster,
nuclear energy, product design, science, technology, telecom
=====Sandra Aamodt: Why dieting doesn't usually work (TEDGlobal 2013)=====
[keywords]
health, neuroscience, obesity

-- sep, 2012
Talks: 1203
Speakers: 1006
Users: 74760
Active Users: 12605
Tags: 298
Themes: 46
Transcripts: 1203
Related Videos: 3090
Favorites: 134533
Comments: 209566
--

m users, n talks, k latent features
create rating_df = (user_id, fav_talk_id) data
run matrix factorization based on rating_df, U x V
for each user "ui", rank k latent features
define peers "pi" for the user "ui" as users with same top 2 latent features
calculate average rank for each k-2 latent features
define potential learning topic "Li" as the latent features with highest average rankings
define potential interested talks "ti" as top 10 talks for latent feature "Li" from V
calculate the rating distance between favorite talks and the potential interested talks
find the recommended talk "ri" with smallest distance

ui: user i
pi: peers for user i
Li: potential most interested learning topic
ti: potential most interested talks of Li
ri: recommended talk for user i


